name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
            use_cross: false
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: linux-aarch64
            use_cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x86_64
            use_cross: false
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-aarch64
            use_cross: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install cross
        if: matrix.platform.use_cross
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Build with cargo
        if: ${{ !matrix.platform.use_cross }}
        run: cargo build --release --target ${{ matrix.platform.target }}

      - name: Build with cross
        if: matrix.platform.use_cross
        run: cross build --release --target ${{ matrix.platform.target }}

      - name: Package binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czf docker-monitor-${{ matrix.platform.name }}.tar.gz docker-monitor
          mv docker-monitor-${{ matrix.platform.name }}.tar.gz ${{ github.workspace }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-monitor-${{ matrix.platform.name }}
          path: docker-monitor-${{ matrix.platform.name }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: artifacts/**/*.tar.gz
          generate_release_notes: true
          draft: false
          prerelease: false
